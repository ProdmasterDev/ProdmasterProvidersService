@model ProvidersDomain.ViewModels.Catalog.CatalogModel
@for (int i = 0; i < Model.Products.Count; i++)
{
    var product = Model.Products[i];
    var verifyClass = "";
    var verifyState = "";
    var productHref = $"/catalog?id={product.Id}";
    switch (product.VerifyState)
    {
        case ProvidersDomain.Models.VerifyState.NotSended:
            productHref = $"/catalog/editProduct?id={product.Id}";
            verifyClass = "bg-light";
            verifyState = "Новый";
            break;
        case ProvidersDomain.Models.VerifyState.Sended:
            verifyClass = "bg-info";
            verifyState = "На проверке";
            break;
        case ProvidersDomain.Models.VerifyState.NotVerified:            
            productHref = $"/catalog/editProduct?id={product.Id}";
            verifyClass = "bg-danger";
            verifyState = "Не утвержден";
            break;
        case ProvidersDomain.Models.VerifyState.Verified:            
            verifyClass = "bg-success";
            verifyState = "Утвержден";
            break;
        case ProvidersDomain.Models.VerifyState.Corrected:
            productHref = $"/catalog/editProduct?id={product.Id}";
            verifyClass = "bg-warning";
            verifyState = "Исправлен, ждет проверки";
            break;
    }
    var price = "-";
    var lastSpecification = product.Specifications.OrderByDescending(c => c.StartsAt).FirstOrDefault();
    if (lastSpecification != default)
    {
        price = product.ProductSpecifications.FirstOrDefault(c => c.SpecificationId == lastSpecification.Id)?.Price.ToString("#,##0.00") ?? "-";
    }

    <tr class="clickable-row bg-gradient bg-opacity-25 @verifyClass" data-href="@productHref">
        <td class="text-center">
            @if (product.VerifyState == ProvidersDomain.Models.VerifyState.NotSended 
            || product.VerifyState == ProvidersDomain.Models.VerifyState.NotVerified
            || product.VerifyState == ProvidersDomain.Models.VerifyState.Corrected)
            {
                <input class="check-delete" type="checkbox" data-id="@product.Id" />
            }
            else
            {
                <input class="check-delete" type="checkbox" data-id="@product.Id" disabled/>
            }
        </td>
        <td>@(i + 1)</td>
        <td>@product.VendorCode</td>
        <td class="text-start">@product.Standart.Name.ToLower()</td>
        <td class="text-start">@product.Name.ToLower()</td>
        <td>@(product.Standart.Unit?.Short ?? "-")</td>
        <td>@product.Quantity</td>
        <td>@price</td>
        <td>@(product.Manufacturer?.Name ?? product.ManufacturerName)</td>
        <td class="mx-3">@verifyState</td>
    </tr>
}