@model ProvidersDomain.ViewModels.Order.OrderModel
<span class="text-danger" asp-validation-for="@Model.Products"></span>
@for (var i = 0; i < Model.Products.Count; i++)
{
    <tr>
        <td class="text-start">
            <a asp-controller="Catalog" asp-action="EditProduct" asp-route-id="@Model.Products[i].Id" class="text-decoration-none text-like-navbar-background">@Model.Products[i].Name.ToLower()</a>
        </td>
        <input type="hidden" asp-for="@Model.Products[i].Id">
        <td class="text-center">
            @if (Model.UserResponse == ProvidersDomain.Models.OrderState.EditedByProvider && Model.OrderState == ProvidersDomain.Models.OrderState.New)
            {
                <input type=number step=any class="form-control" asp-for="@Model.Products[i].Quantity">
            }
            else
            {
                @(Model.Products[i].Quantity?.ToString("#,##0.00") ?? "0.00")
            }
        </td>
        <td class="text-center">
            <input type="hidden" asp-for="@Model.Products[i].Price">
            @(Model.Products[i].Price?.ToString("#,##0.00") ?? "0.00")
        </td>
        <td class="text-center">
            @((Model.Products[i].Price * Model.Products[i].Quantity)?.ToString("#,##0.00") ?? "0.00")
        </td>
    </tr>
}
